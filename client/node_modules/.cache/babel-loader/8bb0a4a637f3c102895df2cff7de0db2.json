{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noogler\\\\Documents\\\\tutorgenic\\\\dev\\\\client\\\\src\\\\components\\\\ApplyTutor.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ReactAvatarEdit from 'react-avatar-edit';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactAvatar from '@material-ui/core/Avatar';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  large: {\n    width: theme.spacing(14),\n    height: theme.spacing(14)\n  },\n  formControl: {\n    marginTop: \"1em\",\n    minWidth: 120\n  },\n  formControl2: {\n    marginTop: \"1em\",\n    marginLeft: \"1em\",\n    minWidth: 120\n  },\n  formControl3: {\n    marginLeft: \"1em\",\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport default function ApplyTutor(props) {\n  _s();\n\n  const {\n    setDisplayNavbar,\n    setUser\n  } = props;\n  const [localUser, setLocalUser] = useState();\n  const classes = useStyles();\n  setDisplayNavbar(true);\n  useEffect(() => {\n    const ac = new AbortController();\n    axios.get('/auth/isLoggedIn').then(res => res.data).catch(err => console.log(err)).then(res => {\n      if (res.isLoggedIn) {\n        const user = res.user;\n        setUser(user);\n        setLocalUser(user);\n      } else {\n        window.open('/', '_self');\n      }\n    });\n    return () => {\n      ac.abort();\n    };\n  }, [setUser]);\n  const [avatarData, setAvatarData] = useState({\n    preview: null,\n    src: null,\n    file: null,\n    currentExtension: null,\n    originalFile: null\n  });\n  const [uploadingNewFile, setUploadingNewFile] = useState(false);\n\n  function onClose() {\n    setUploadingNewFile(false);\n    setAvatarData({\n      preview: null,\n      src: null,\n      file: null,\n      originalFile: null\n    });\n  }\n\n  async function onCrop(preview) {\n    setAvatarData(prevData => {\n      return { ...prevData,\n        preview\n      };\n    });\n    const currentExtension = avatarData.currentExtension;\n    const file = await urltoFile(preview, 'userImage.' + currentExtension, 'image/' + currentExtension);\n    setAvatarData(prevData => {\n      return { ...prevData,\n        file: file\n      };\n    });\n  }\n\n  function onBeforeFileLoad(event) {\n    const re = /\\.(gif|jpe?g|tiff?|png|webp|bmp)$/i;\n    const file = event.target.files[0];\n\n    if (file.size > 1000000000000000) {\n      event.target.value = \"\";\n      alert(\"File size is too big.\");\n    } else if (!re.test(file.name)) {\n      alert(\"File extension is not allowed.\");\n    } else {\n      setUploadingNewFile(true);\n      const separator = /(?:\\.([^.]+))?$/;\n      setAvatarData(prevData => {\n        return { ...prevData,\n          currentExtension: separator.exec(file.name)[1],\n          originalFile: file\n        };\n      });\n    }\n  }\n\n  function urltoFile(url, filename, mimeType) {\n    return fetch(url).then(function (res) {\n      return res.arrayBuffer();\n    }).then(function (buf) {\n      return new File([buf], filename, {\n        type: mimeType\n      });\n    });\n  }\n\n  const [gender, setGender] = useState(1);\n  const [country, setCountry] = useState(\"Indonesia\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [headline, setHeadline] = useState(\"\");\n  const [selfDescription, setSelfDescription] = useState(\"\");\n  const [chosenSubjects, setChosenSubjects] = useState([]);\n  const [educations, setEducations] = useState([]);\n  const [experiences, setExperiences] = useState([]);\n  const years = [];\n\n  for (var i = 1980; i < 2051; i++) {\n    years.push(i);\n  }\n\n  const [checked, setChecked] = useState(false);\n  const availableSubjects = [\"Mathematics\", \"Physics\", \"Computer science\", \"Biology\", \"Chemistry\", \"Music\", \"Guitar\", \"Piano\", \"Drum\", \"Saxophone\", \"Vocal\", \"Robotics\", \"Dance\", \"Culinary\", \"Politics\", \"Photography\", \"Machine Learning\", \"Entrepreneurship\", \"Aerodynamics\", \"React\", \"Redux\", \"MongoDB\", \"SQL\", \"PostGreSql\", \"Astronomy\", \"Korean\", \"English\", \"Mandarin\", \"Statistical Mechanics\", \"Data Science\", \"Linear Algebra\", \"iOS Development\", \"Android Development\", \"HTML\", \"Web Development\", \"Calculus\", \"Organic Chemistry\", \"Irish\", \"Chemical Engineering\", \"Agricultural Economics\", \"Civil Engineering\", \"Software Testing\", \"Data Visualization\", \"Economics\", \"Business\", \"User Experience\", \"Zoology\", \"Marine Biology\", \"Aerospace Engineering\", \"Mechanical Engineering\", \"Fashion\", \"Unix\", \"JavaScript\", \"Python\", \"Java\", \"C++\", \"Ruby\", \"Go\", \"Health and Science\", \"Music Theory\", \"Martial Arts\", \"Game Development\", \"Microsoft Word\", \"Microsoft Excel\", \"REST API\", \"Photoshop\", \"Yoga\", \"Pole Dance\", \"Philosophy\", \"LaTeX\", \"German\", \"Arabic\", \"Criminal Justice\", \"Parenting\", \"Indonesian History\", \"Electrical Engineering\", \"MatLab\", \"Epidemiology\", \"Microbiology\", \"Discrete Math\", \"Creative Writing\", \"Stand up comedy\", \"Industrial Engineering\", \"Autism\", \"Tourism\", \"Physiology\", \"LinkedIn\", \"Neuroscience\", \"Animation\", \"Interior design\", \"Blockchain\", \"Electronics Engineering\", \"TensorFlow\", \"Journalism\", \"Psychology\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#personalInformation\",\n            children: \"Personal information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#subjects\",\n            children: \"Subjects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#education\",\n            children: \"Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#experience\",\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#policyAgreement\",\n            children: \"Policy Agreement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#submitApplication\",\n            children: \"Submit Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          name: \"personalInformation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_top\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Personal information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"Phone number\",\n              variant: \"outlined\",\n              value: phoneNumber,\n              onChange: event => {\n                setPhoneNumber(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              style: {\n                marginLeft: \"1em\"\n              },\n              id: \"outlined-basic\",\n              label: \"Headline\",\n              variant: \"outlined\",\n              value: headline,\n              onChange: event => {\n                setHeadline(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              className: classes.formControl,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-simple-select-outlined-label\",\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"demo-simple-select-outlined-label\",\n                id: \"demo-simple-select-outlined\",\n                value: gender,\n                onChange: event => {\n                  setGender(event.target.value);\n                },\n                label: \"Gender\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 1,\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 0,\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: -1,\n                  children: \"Prefer not to say\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              className: classes.formControl2,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-simple-select-outlined-label\",\n                children: \"Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"demo-simple-select-outlined-label\",\n                id: \"demo-simple-select-outlined\",\n                value: country,\n                onChange: event => {\n                  setCountry(event.target.value);\n                },\n                label: \"Country\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Australia\",\n                  children: \"Australia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Canada\",\n                  children: \"Canada\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Indonesia\",\n                  children: \"Indonesia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Ireland\",\n                  children: \"Ireland\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Malaysia\",\n                  children: \"Malaysia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Singapore\",\n                  children: \"Singapore\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"United Kingdom\",\n                  children: \"United Kingdom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"United States of America\",\n                  children: \"United States of America\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Others\",\n                  children: \"Others\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              placeholder: \"Description about yourself\",\n              multiline: true,\n              rows: 4,\n              rowsMax: 4,\n              variant: \"outlined\",\n              value: selfDescription,\n              onChange: event => {\n                setSelfDescription(event.target.value);\n              },\n              style: {\n                marginTop: \"1em\",\n                width: \"61.6%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          name: \"subjects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_top\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Subjects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_bottom\",\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            onChange: (event, value) => {\n              setChosenSubjects(value);\n            },\n            multiple: true,\n            limitTags: 2,\n            id: \"multiple-limit-tags\",\n            options: availableSubjects,\n            getOptionLabel: option => option,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              variant: \"outlined\",\n              label: \"Available subjects\",\n              placeholder: \"Favorites\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          name: \"education\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_top\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_bottom\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            id: \"specialAddMoreEducation\",\n            onClick: () => {\n              setEducations(prevData => {\n                document.getElementById(\"specialAddMoreEducation\").style.display = \"none\";\n                return [...prevData, {\n                  school: \"\",\n                  fromYear: 2021,\n                  toYear: 2021,\n                  degree: \"\",\n                  fieldOfStudy: \"\",\n                  description: \"\"\n                }];\n              });\n            },\n            children: \"add more education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 21\n          }, this), educations.map((education, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-basic\",\n                label: \"School\",\n                variant: \"outlined\",\n                value: education.school,\n                onChange: event => {\n                  setEducations(prevData => {\n                    const temp = [];\n\n                    for (var i = 0; i < prevData.length; i++) {\n                      if (i === index) {\n                        temp.push({ ...prevData[index],\n                          school: event.target.value\n                        });\n                      } else {\n                        temp.push(prevData[i]);\n                      }\n                    }\n\n                    return temp;\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"outlined\",\n                className: classes.formControl3,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-simple-select-outlined-label\",\n                  children: \"From year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"demo-simple-select-outlined-label\",\n                  id: \"demo-simple-select-outlined\",\n                  value: education.fromYear,\n                  onChange: event => {\n                    setEducations(prevData => {\n                      const temp = [];\n\n                      for (var i = 0; i < prevData.length; i++) {\n                        if (i === index) {\n                          temp.push({ ...prevData[index],\n                            fromYear: event.target.value\n                          });\n                        } else {\n                          temp.push(prevData[i]);\n                        }\n                      }\n\n                      return temp;\n                    });\n                  },\n                  label: \"From Year\",\n                  children: years.map(year => {\n                    return /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: year,\n                      children: year\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 414,\n                      columnNumber: 43\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"outlined\",\n                className: classes.formControl3,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-simple-select-outlined-label\",\n                  children: \"To year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"demo-simple-select-outlined-label\",\n                  id: \"demo-simple-select-outlined\",\n                  value: education.toYear,\n                  onChange: event => {\n                    setEducations(prevData => {\n                      const temp = [];\n\n                      for (var i = 0; i < prevData.length; i++) {\n                        if (i === index) {\n                          temp.push({ ...prevData[index],\n                            toYear: event.target.value\n                          });\n                        } else {\n                          temp.push(prevData[i]);\n                        }\n                      }\n\n                      return temp;\n                    });\n                  },\n                  label: \"To Year\",\n                  children: years.map(year => {\n                    return /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: year,\n                      children: year\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 443,\n                      columnNumber: 43\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 39\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                style: {\n                  marginTop: \"1em\"\n                },\n                id: \"outlined-basic\",\n                label: \"Degree\",\n                variant: \"outlined\",\n                value: education.degree,\n                onChange: event => {\n                  setEducations(prevData => {\n                    const temp = [];\n\n                    for (var i = 0; i < prevData.length; i++) {\n                      if (i === index) {\n                        temp.push({ ...prevData[index],\n                          degree: event.target.value\n                        });\n                      } else {\n                        temp.push(prevData[i]);\n                      }\n                    }\n\n                    return temp;\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                style: {\n                  marginTop: \"1em\",\n                  marginLeft: \"1em\"\n                },\n                id: \"outlined-basic\",\n                label: \"Field of study\",\n                variant: \"outlined\",\n                value: education.fieldOfStudy,\n                onChange: event => {\n                  setEducations(prevData => {\n                    const temp = [];\n\n                    for (var i = 0; i < prevData.length; i++) {\n                      if (i === index) {\n                        temp.push({ ...prevData[index],\n                          fieldOfStudy: event.target.value\n                        });\n                      } else {\n                        temp.push(prevData[i]);\n                      }\n                    }\n\n                    return temp;\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                placeholder: \"Description\",\n                multiline: true,\n                rows: 4,\n                rowsMax: 4,\n                variant: \"outlined\",\n                value: education.description,\n                onChange: event => {\n                  setEducations(prevData => {\n                    const temp = [];\n\n                    for (var i = 0; i < prevData.length; i++) {\n                      if (i === index) {\n                        temp.push({ ...prevData[index],\n                          description: event.target.value\n                        });\n                      } else {\n                        temp.push(prevData[i]);\n                      }\n                    }\n\n                    return temp;\n                  });\n                },\n                style: {\n                  marginTop: \"1em\",\n                  width: \"50%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"secondary\",\n                id: index.toString(),\n                onClick: () => {\n                  setEducations(prevData => {\n                    document.getElementById(index.toString()).style.visibility = \"hidden\";\n                    return [...prevData, {\n                      school: \"\",\n                      fromYear: 2021,\n                      toYear: 2021,\n                      degree: \"\",\n                      fieldOfStudy: \"\",\n                      description: \"\"\n                    }];\n                  });\n                },\n                children: \"add more education\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 32\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          name: \"experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_top\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_bottom\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            id: \"specialAddMoreExperiences\",\n            onClick: () => {\n              setExperiences(prevData => {\n                document.getElementById(\"specialAddMoreExperiences\").style.display = \"none\";\n                return [...prevData, {\n                  company: \"\",\n                  jobTitle: \"\",\n                  fromYear: 2021,\n                  toYear: 2021,\n                  description: \"\"\n                }];\n              });\n            },\n            children: \"add more experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 21\n          }, this), experiences.map((experience, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-basic\",\n                label: \"Company\",\n                variant: \"outlined\",\n                value: experience.company,\n                onChange: event => {\n                  setExperiences(prevData => {\n                    const temp = [];\n\n                    for (var i = 0; i < prevData.length; i++) {\n                      if (i === index) {\n                        temp.push({ ...prevData[index],\n                          company: event.target.value\n                        });\n                      } else {\n                        temp.push(prevData[i]);\n                      }\n                    }\n\n                    return temp;\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"outlined\",\n                className: classes.formControl3,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-simple-select-outlined-label\",\n                  children: \"From year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"demo-simple-select-outlined-label\",\n                  id: \"demo-simple-select-outlined\",\n                  value: experiences.fromYear,\n                  onChange: event => {\n                    setExperiences(prevData => {\n                      const temp = [];\n\n                      for (var i = 0; i < prevData.length; i++) {\n                        if (i === index) {\n                          temp.push({ ...prevData[index],\n                            fromYear: event.target.value\n                          });\n                        } else {\n                          temp.push(prevData[i]);\n                        }\n                      }\n\n                      return temp;\n                    });\n                  },\n                  label: \"From Year\",\n                  children: years.map(year => {\n                    return /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: year,\n                      children: year\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 610,\n                      columnNumber: 44\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"outlined\",\n                className: classes.formControl3,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-simple-select-outlined-label\",\n                  children: \"To year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"demo-simple-select-outlined-label\",\n                  id: \"demo-simple-select-outlined\",\n                  value: experiences.toYear,\n                  onChange: event => {\n                    setExperiences(prevData => {\n                      const temp = [];\n\n                      for (var i = 0; i < prevData.length; i++) {\n                        if (i === index) {\n                          temp.push({ ...prevData[index],\n                            toYear: event.target.value\n                          });\n                        } else {\n                          temp.push(prevData[i]);\n                        }\n                      }\n\n                      return temp;\n                    });\n                  },\n                  label: \"To Year\",\n                  children: years.map(year => {\n                    return /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: year,\n                      children: year\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 639,\n                      columnNumber: 48\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-basic\",\n                label: \"Job title\",\n                variant: \"outlined\",\n                value: experience.jobTitle,\n                onChange: event => {\n                  setExperiences(prevData => {\n                    const temp = [];\n\n                    for (var i = 0; i < prevData.length; i++) {\n                      if (i === index) {\n                        temp.push({ ...prevData[index],\n                          jobTitle: event.target.value\n                        });\n                      } else {\n                        temp.push(prevData[i]);\n                      }\n                    }\n\n                    return temp;\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-basic\",\n                label: \"Job description\",\n                variant: \"outlined\",\n                style: {\n                  marginLeft: \"1em\"\n                },\n                value: experience.description,\n                onChange: event => {\n                  setExperiences(prevData => {\n                    const temp = [];\n\n                    for (var i = 0; i < prevData.length; i++) {\n                      if (i === index) {\n                        temp.push({ ...prevData[index],\n                          description: event.target.value\n                        });\n                      } else {\n                        temp.push(prevData[i]);\n                      }\n                    }\n\n                    return temp;\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 38\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                placeholder: \"Description\",\n                multiline: true,\n                rows: 4,\n                rowsMax: 4,\n                variant: \"outlined\",\n                value: experiences.description,\n                onChange: event => {\n                  setEducations(prevData => {\n                    const temp = [];\n\n                    for (var i = 0; i < prevData.length; i++) {\n                      if (i === index) {\n                        temp.push({ ...prevData[index],\n                          description: event.target.value\n                        });\n                      } else {\n                        temp.push(prevData[i]);\n                      }\n                    }\n\n                    return temp;\n                  });\n                },\n                style: {\n                  marginTop: \"1em\",\n                  width: \"50%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"secondary\",\n                id: \"experience\" + index.toString(),\n                onClick: () => {\n                  setExperiences(prevData => {\n                    document.getElementById(\"experience\" + index.toString()).style.visibility = \"hidden\";\n                    return [...prevData, {\n                      company: \"\",\n                      jobTitle: \"\",\n                      fromYear: 2021,\n                      toYear: 2021,\n                      description: \"\"\n                    }];\n                  });\n                },\n                children: \"add more experience\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 711,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 32\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          name: \"policyAgreement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_top\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Policy Agreement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_bottom\",\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: checked,\n            onChange: event => {\n              setChecked(event.target.checked);\n            },\n            inputProps: {\n              'aria-label': 'primary checkbox'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"By checking the box, you agree to:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            style: {\n              marginLeft: \"2em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"All TutorOcean Terms & Conditions.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Adhere to all TutorOcean Policies.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Not communicate with our students outside the TutorOcean platform.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Not accept payment directly from our students outside the TutorOcean platform.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          name: \"submitApplication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_top\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Submit Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_bottom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ApplyTutor, \"S/lPG+5XgO2zK5YxmzA6nfL3qe0=\", false, function () {\n  return [useStyles];\n});\n\n_c = ApplyTutor;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplyTutor\");","map":{"version":3,"sources":["C:/Users/noogler/Documents/tutorgenic/dev/client/src/components/ApplyTutor.js"],"names":["axios","useEffect","useState","TextField","Button","ReactAvatarEdit","makeStyles","ReactAvatar","Select","InputLabel","MenuItem","FormHelperText","FormControl","Autocomplete","Checkbox","useStyles","theme","large","width","spacing","height","formControl","marginTop","minWidth","formControl2","marginLeft","formControl3","selectEmpty","ApplyTutor","props","setDisplayNavbar","setUser","localUser","setLocalUser","classes","ac","AbortController","get","then","res","data","catch","err","console","log","isLoggedIn","user","window","open","abort","avatarData","setAvatarData","preview","src","file","currentExtension","originalFile","uploadingNewFile","setUploadingNewFile","onClose","onCrop","prevData","urltoFile","onBeforeFileLoad","event","re","target","files","size","value","alert","test","name","separator","exec","url","filename","mimeType","fetch","arrayBuffer","buf","File","type","gender","setGender","country","setCountry","phoneNumber","setPhoneNumber","headline","setHeadline","selfDescription","setSelfDescription","chosenSubjects","setChosenSubjects","educations","setEducations","experiences","setExperiences","years","i","push","checked","setChecked","availableSubjects","option","params","document","getElementById","style","display","school","fromYear","toYear","degree","fieldOfStudy","description","map","education","index","temp","length","year","toString","visibility","company","jobTitle","experience"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {useEffect, useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReactAvatarEdit from 'react-avatar-edit';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ReactAvatar from '@material-ui/core/Avatar';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    large: {\r\n        width: theme.spacing(14),\r\n        height: theme.spacing(14),\r\n    },\r\n    formControl: {\r\n        marginTop: \"1em\",\r\n        minWidth: 120,\r\n    },\r\n    formControl2: {\r\n        marginTop: \"1em\",\r\n        marginLeft: \"1em\",\r\n        minWidth: 120,\r\n    },\r\n    formControl3: {\r\n        marginLeft: \"1em\",\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function ApplyTutor(props) {\r\n    const {setDisplayNavbar, setUser} = props;\r\n    const [localUser, setLocalUser] = useState();\r\n    const classes = useStyles();\r\n    \r\n    setDisplayNavbar(true);\r\n    useEffect(() => {\r\n        const ac = new AbortController();\r\n        axios.get('/auth/isLoggedIn')\r\n            .then(res => res.data)\r\n            .catch(err => console.log(err))\r\n            .then(res => {\r\n                if (res.isLoggedIn) {\r\n                    const user = res.user;\r\n                    setUser(user);\r\n                    setLocalUser(user);\r\n                } else {\r\n                    window.open('/', '_self');\r\n                }\r\n            })\r\n        return () => {\r\n            ac.abort();\r\n        }\r\n    }, [setUser]);\r\n\r\n    const [avatarData, setAvatarData] = useState({\r\n        preview: null,\r\n        src: null,\r\n        file: null,\r\n        currentExtension: null,\r\n        originalFile: null\r\n    });\r\n\r\n    const [uploadingNewFile, setUploadingNewFile] = useState(false);\r\n\r\n    function onClose() {\r\n        setUploadingNewFile(false);\r\n        setAvatarData({preview: null, src: null, file: null, originalFile: null});\r\n    }\r\n    \r\n    async function onCrop(preview) {\r\n        setAvatarData(prevData => {\r\n            return {...prevData, preview};\r\n        })\r\n        const currentExtension = avatarData.currentExtension;\r\n        const file = await urltoFile(preview, 'userImage.' + currentExtension, 'image/' + currentExtension)\r\n        setAvatarData(prevData => {\r\n            return {...prevData, file: file};\r\n        })\r\n    }\r\n    \r\n    function onBeforeFileLoad(event) {\r\n        const re = /\\.(gif|jpe?g|tiff?|png|webp|bmp)$/i;\r\n        const file = event.target.files[0];\r\n        if (file.size > 1000000000000000) {\r\n            event.target.value = \"\";\r\n            alert(\"File size is too big.\")\r\n        } else if (!re.test(file.name)) {\r\n            alert(\"File extension is not allowed.\")\r\n        } else {\r\n            setUploadingNewFile(true);\r\n            const separator = /(?:\\.([^.]+))?$/;\r\n            setAvatarData(prevData => {\r\n                return {...prevData, currentExtension: separator.exec(file.name)[1], originalFile: file};\r\n            })\r\n        }\r\n    }\r\n    \r\n    function urltoFile(url, filename, mimeType){\r\n        return (fetch(url)\r\n            .then(function(res){return res.arrayBuffer();})\r\n            .then(function(buf){return new File([buf], filename,{type:mimeType});})\r\n        );\r\n    }\r\n\r\n    const [gender, setGender] = useState(1);\r\n    const [country, setCountry] = useState(\"Indonesia\");\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n    const [headline, setHeadline] = useState(\"\");\r\n    const [selfDescription, setSelfDescription] = useState(\"\");\r\n    const [chosenSubjects, setChosenSubjects] = useState([]);\r\n    const [educations, setEducations] = useState([]);\r\n\r\n    const [experiences, setExperiences] = useState([]);\r\n\r\n    const years = [];\r\n    for (var i = 1980; i < 2051; i++) {\r\n        years.push(i);\r\n    }\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const availableSubjects = [\r\n        \"Mathematics\",\r\n        \"Physics\",\r\n        \"Computer science\",\r\n        \"Biology\",\r\n        \"Chemistry\",\r\n        \"Music\",\r\n        \"Guitar\",\r\n        \"Piano\",\r\n        \"Drum\",\r\n        \"Saxophone\",\r\n        \"Vocal\",\r\n        \"Robotics\",\r\n        \"Dance\",\r\n        \"Culinary\",\r\n        \"Politics\",\r\n        \"Photography\",\r\n        \"Machine Learning\",\r\n        \"Entrepreneurship\",\r\n        \"Aerodynamics\",\r\n        \"React\",\r\n        \"Redux\",\r\n        \"MongoDB\",\r\n        \"SQL\",\r\n        \"PostGreSql\",\r\n        \"Astronomy\",\r\n        \"Korean\",\r\n        \"English\",\r\n        \"Mandarin\",\r\n        \"Statistical Mechanics\",\r\n        \"Data Science\",\r\n        \"Linear Algebra\",\r\n        \"iOS Development\",\r\n        \"Android Development\",\r\n        \"HTML\",\r\n        \"Web Development\",\r\n        \"Calculus\",\r\n        \"Organic Chemistry\",\r\n        \"Irish\",\r\n        \"Chemical Engineering\",\r\n        \"Agricultural Economics\",\r\n        \"Civil Engineering\",\r\n        \"Software Testing\",\r\n        \"Data Visualization\",\r\n        \"Economics\",\r\n        \"Business\",\r\n        \"User Experience\",\r\n        \"Zoology\",\r\n        \"Marine Biology\",\r\n        \"Aerospace Engineering\",\r\n        \"Mechanical Engineering\",\r\n        \"Fashion\",\r\n        \"Unix\",\r\n        \"JavaScript\",\r\n        \"Python\",\r\n        \"Java\",\r\n        \"C++\",\r\n        \"Ruby\",\r\n        \"Go\",\r\n        \"Health and Science\",\r\n        \"Music Theory\",\r\n        \"Martial Arts\",\r\n        \"Game Development\",\r\n        \"Microsoft Word\",\r\n        \"Microsoft Excel\",\r\n        \"REST API\",\r\n        \"Photoshop\",\r\n        \"Yoga\",\r\n        \"Pole Dance\",\r\n        \"Philosophy\",\r\n        \"LaTeX\",\r\n        \"German\",\r\n        \"Arabic\",\r\n        \"Criminal Justice\",\r\n        \"Parenting\",\r\n        \"Indonesian History\",\r\n        \"Electrical Engineering\",\r\n        \"MatLab\",\r\n        \"Epidemiology\",\r\n        \"Microbiology\",\r\n        \"Discrete Math\",\r\n        \"Creative Writing\",\r\n        \"Stand up comedy\",\r\n        \"Industrial Engineering\",\r\n        \"Autism\",\r\n        \"Tourism\",\r\n        \"Physiology\",\r\n        \"LinkedIn\",\r\n        \"Neuroscience\",\r\n        \"Animation\",\r\n        \"Interior design\",\r\n        \"Blockchain\",\r\n        \"Electronics Engineering\",\r\n        \"TensorFlow\",\r\n        \"Journalism\",\r\n        \"Psychology\"\r\n    ]\r\n\r\n    return <div className=\"wrapper\">\r\n        <div className=\"sidebar\">\r\n            <h2>Apply</h2>\r\n            <ul>\r\n                <li><a href=\"#personalInformation\">Personal information</a></li>\r\n                <li><a href=\"#subjects\">Subjects</a></li>\r\n                <li><a href=\"#education\">Education</a></li>\r\n                <li><a href=\"#experience\">Experience</a></li>\r\n                <li><a href=\"#policyAgreement\">Policy Agreement</a></li>\r\n                <li><a href=\"#submitApplication\">Submit Application</a></li>\r\n            </ul>\r\n        </div>\r\n        <div className=\"content\">\r\n            <div className=\"box\">\r\n                <a name=\"personalInformation\"></a>\r\n                <div className=\"box_top\">\r\n                    <h2>Personal information</h2>\r\n                </div>\r\n                <div className=\"box_bottom\">\r\n                    <form>\r\n                        <TextField \r\n                            id=\"outlined-basic\" \r\n                            label=\"Phone number\" \r\n                            variant=\"outlined\"\r\n                            value={phoneNumber}\r\n                            onChange={(event) => {\r\n                                setPhoneNumber(event.target.value);\r\n                            }} />\r\n                        <TextField \r\n                            style={{marginLeft: \"1em\"}} \r\n                            id=\"outlined-basic\" \r\n                            label=\"Headline\" \r\n                            variant=\"outlined\"\r\n                            value={headline}\r\n                            onChange={(event) => {\r\n                                setHeadline(event.target.value);\r\n                            }} />\r\n                        <br />\r\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">Gender</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                id=\"demo-simple-select-outlined\"\r\n                                value={gender}\r\n                                onChange={(event) => {\r\n                                    setGender(event.target.value);\r\n                                }}\r\n                                label=\"Gender\"\r\n                            >\r\n                                <MenuItem value={1}>Male</MenuItem>\r\n                                <MenuItem value={0}>Female</MenuItem>\r\n                                <MenuItem value={-1}>Prefer not to say</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl2}>\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">Country</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                id=\"demo-simple-select-outlined\"\r\n                                value={country}\r\n                                onChange={(event) => {\r\n                                    setCountry(event.target.value);\r\n                                }}\r\n                                label=\"Country\"\r\n                            >   \r\n                                <MenuItem value={\"Australia\"}>Australia</MenuItem>\r\n                                <MenuItem value={\"Canada\"}>Canada</MenuItem>\r\n                                <MenuItem value={\"Indonesia\"}>Indonesia</MenuItem>\r\n                                <MenuItem value={\"Ireland\"}>Ireland</MenuItem>\r\n                                <MenuItem value={\"Malaysia\"}>Malaysia</MenuItem>\r\n                                <MenuItem value={\"Singapore\"}>Singapore</MenuItem>\r\n                                <MenuItem value={\"United Kingdom\"}>United Kingdom</MenuItem>\r\n                                <MenuItem value={\"United States of America\"}>United States of America</MenuItem>\r\n                                <MenuItem value={\"Others\"}>Others</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <br />\r\n                        <TextField\r\n                            placeholder=\"Description about yourself\"\r\n                            multiline\r\n                            rows={4}\r\n                            rowsMax={4}\r\n                            variant=\"outlined\"\r\n                            value={selfDescription}\r\n                            onChange={(event) => {\r\n                                setSelfDescription(event.target.value);\r\n                            }}\r\n                            style={{marginTop: \"1em\", width: \"61.6%\"}}\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"box\">\r\n                <a name=\"subjects\"></a>\r\n                <div className=\"box_top\">\r\n                    <h2>Subjects</h2>\r\n                </div>\r\n                <div className=\"box_bottom\">\r\n                <Autocomplete\r\n                    onChange={(event, value) => {\r\n                        setChosenSubjects(value);\r\n                    }}\r\n                    multiple\r\n                    limitTags={2}\r\n                    id=\"multiple-limit-tags\"\r\n                    options={availableSubjects}\r\n                    getOptionLabel={(option) => option}\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} variant=\"outlined\" label=\"Available subjects\" placeholder=\"Favorites\" />\r\n                    )}\r\n                />\r\n                </div>\r\n            </div>\r\n            <div className=\"box\">\r\n                <a name=\"education\"></a>\r\n                <div className=\"box_top\">\r\n                    <h2>Education</h2>\r\n                </div>\r\n                <div className=\"box_bottom\">\r\n                    <Button \r\n                        variant=\"outlined\" \r\n                        color=\"secondary\"\r\n                        id=\"specialAddMoreEducation\"\r\n                        onClick={() => {\r\n                            setEducations(prevData => {\r\n                                document.getElementById(\"specialAddMoreEducation\").style.display = \"none\";\r\n                                return [...prevData, {\r\n                                    school: \"\",\r\n                                    fromYear: 2021,\r\n                                    toYear: 2021,\r\n                                    degree: \"\",\r\n                                    fieldOfStudy: \"\",\r\n                                    description: \"\"\r\n                                }]\r\n                            })\r\n                        }}>\r\n                        add more education\r\n                    </Button>\r\n                    {educations.map((education, index) =>{\r\n                        return <div><TextField \r\n                            id=\"outlined-basic\" \r\n                            label=\"School\" \r\n                            variant=\"outlined\"\r\n                            value={education.school}\r\n                            onChange={(event) => {\r\n                                setEducations(prevData => {\r\n                                    const temp = [];\r\n                                    for (var i = 0; i < prevData.length; i++) {\r\n                                        if (i === index) {\r\n                                            temp.push({\r\n                                                ...prevData[index],\r\n                                                school: event.target.value\r\n                                            })\r\n                                        } else {\r\n                                            temp.push(prevData[i]);\r\n                                        }\r\n                                    }\r\n                                    return temp;\r\n                                })\r\n                            }} />\r\n                        <FormControl variant=\"outlined\" className={classes.formControl3}>\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">From year</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                id=\"demo-simple-select-outlined\"\r\n                                value={education.fromYear}\r\n                                onChange={(event) => {\r\n                                    setEducations(prevData => {\r\n                                        const temp = [];\r\n                                        for (var i = 0; i < prevData.length; i++) {\r\n                                            if (i === index) {\r\n                                                temp.push({\r\n                                                    ...prevData[index],\r\n                                                    fromYear: event.target.value\r\n                                                })\r\n                                            } else {\r\n                                                temp.push(prevData[i]);\r\n                                            }\r\n                                        }\r\n                                        return temp;\r\n                                    })\r\n                                }}\r\n                                label=\"From Year\"\r\n                            >   \r\n                                {years.map(year => {\r\n                                   return <MenuItem value={year}>{year}</MenuItem> \r\n                                })}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"outlined\" className={classes.formControl3}>\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">To year</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                id=\"demo-simple-select-outlined\"\r\n                                value={education.toYear}\r\n                                onChange={(event) => {\r\n                                    setEducations(prevData => {\r\n                                        const temp = [];\r\n                                        for (var i = 0; i < prevData.length; i++) {\r\n                                            if (i === index) {\r\n                                                temp.push({\r\n                                                    ...prevData[index],\r\n                                                    toYear: event.target.value\r\n                                                })\r\n                                            } else {\r\n                                                temp.push(prevData[i]);\r\n                                            }\r\n                                        }\r\n                                        return temp;\r\n                                    })\r\n                                }}\r\n                                label=\"To Year\"\r\n                            >   \r\n                                {years.map(year => {\r\n                                   return <MenuItem value={year}>{year}</MenuItem> \r\n                                })}\r\n                            </Select>\r\n                        </FormControl><br />\r\n                        <TextField \r\n                            style={{marginTop: \"1em\"}} \r\n                            id=\"outlined-basic\" \r\n                            label=\"Degree\" \r\n                            variant=\"outlined\"\r\n                            value={education.degree}\r\n                            onChange={(event) => {\r\n                                setEducations(prevData => {\r\n                                    const temp = [];\r\n                                    for (var i = 0; i < prevData.length; i++) {\r\n                                        if (i === index) {\r\n                                            temp.push({\r\n                                                ...prevData[index],\r\n                                                degree: event.target.value\r\n                                            })\r\n                                        } else {\r\n                                            temp.push(prevData[i]);\r\n                                        }\r\n                                    }\r\n                                    return temp;\r\n                                })\r\n                            }} />\r\n                        <TextField\r\n                            style={{marginTop: \"1em\", marginLeft: \"1em\"}}  \r\n                            id=\"outlined-basic\" \r\n                            label=\"Field of study\" \r\n                            variant=\"outlined\"\r\n                            value={education.fieldOfStudy}\r\n                            onChange={(event) => {\r\n                                setEducations(prevData => {\r\n                                    const temp = [];\r\n                                    for (var i = 0; i < prevData.length; i++) {\r\n                                        if (i === index) {\r\n                                            temp.push({\r\n                                                ...prevData[index],\r\n                                                fieldOfStudy: event.target.value\r\n                                            })\r\n                                        } else {\r\n                                            temp.push(prevData[i]);\r\n                                        }\r\n                                    }\r\n                                    return temp;\r\n                                })\r\n                            }} /><br />\r\n                        <TextField\r\n                            placeholder=\"Description\"\r\n                            multiline\r\n                            rows={4}\r\n                            rowsMax={4}\r\n                            variant=\"outlined\"\r\n                            value={education.description}\r\n                            onChange={(event) => {\r\n                                setEducations(prevData => {\r\n                                    const temp = [];\r\n                                    for (var i = 0; i < prevData.length; i++) {\r\n                                        if (i === index) {\r\n                                            temp.push({\r\n                                                ...prevData[index],\r\n                                                description: event.target.value\r\n                                            })\r\n                                        } else {\r\n                                            temp.push(prevData[i]);\r\n                                        }\r\n                                    }\r\n                                    return temp;\r\n                                })\r\n                            }}\r\n                            style={{marginTop: \"1em\", width: \"50%\"}}\r\n                        /><br /><br />\r\n                        <Button \r\n                            variant=\"outlined\" \r\n                            color=\"secondary\"\r\n                            id={index.toString()}\r\n                            onClick={() => {\r\n                                setEducations(prevData => {\r\n                                    document.getElementById(index.toString()).style.visibility = \"hidden\";\r\n                                    return [...prevData, {\r\n                                        school: \"\",\r\n                                        fromYear: 2021,\r\n                                        toYear: 2021,\r\n                                        degree: \"\",\r\n                                        fieldOfStudy: \"\",\r\n                                        description: \"\"\r\n                                    }]\r\n                                })\r\n                            }}>\r\n                            add more education\r\n                        </Button></div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className=\"box\">\r\n                <a name=\"experience\"></a>\r\n                <div className=\"box_top\">\r\n                    <h2>Experience</h2>\r\n                </div>\r\n                <div className=\"box_bottom\">\r\n                    <Button \r\n                        variant=\"outlined\" \r\n                        color=\"secondary\"\r\n                        id=\"specialAddMoreExperiences\"\r\n                        onClick={() => {\r\n                            setExperiences(prevData => {\r\n                                document.getElementById(\"specialAddMoreExperiences\").style.display = \"none\";\r\n                                return [...prevData, {\r\n                                    company: \"\",\r\n                                    jobTitle: \"\",\r\n                                    fromYear: 2021,\r\n                                    toYear: 2021,\r\n                                    description: \"\"\r\n                                }]\r\n                            })\r\n                        }}>\r\n                        add more experience\r\n                    </Button>\r\n                    {experiences.map((experience, index) => {\r\n                        return <div>\r\n                            <TextField \r\n                                id=\"outlined-basic\" \r\n                                label=\"Company\" \r\n                                variant=\"outlined\"\r\n                                value={experience.company}\r\n                                onChange={(event) => {\r\n                                    setExperiences(prevData => {\r\n                                        const temp = [];\r\n                                        for (var i = 0; i < prevData.length; i++) {\r\n                                            if (i === index) {\r\n                                                temp.push({\r\n                                                    ...prevData[index],\r\n                                                    company: event.target.value\r\n                                                })\r\n                                            } else {\r\n                                                temp.push(prevData[i]);\r\n                                            }\r\n                                        }\r\n                                        return temp;\r\n                                    })\r\n                                }} />\r\n                            <FormControl variant=\"outlined\" className={classes.formControl3}>\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">From year</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    value={experiences.fromYear}\r\n                                    onChange={(event) => {\r\n                                        setExperiences(prevData => {\r\n                                            const temp = [];\r\n                                            for (var i = 0; i < prevData.length; i++) {\r\n                                                if (i === index) {\r\n                                                    temp.push({\r\n                                                        ...prevData[index],\r\n                                                        fromYear: event.target.value\r\n                                                    })\r\n                                                } else {\r\n                                                    temp.push(prevData[i]);\r\n                                                }\r\n                                            }\r\n                                            return temp;\r\n                                        })\r\n                                    }}\r\n                                    label=\"From Year\"\r\n                                >   \r\n                                    {years.map(year => {\r\n                                    return <MenuItem value={year}>{year}</MenuItem> \r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl3}>\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">To year</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    value={experiences.toYear}\r\n                                    onChange={(event) => {\r\n                                        setExperiences(prevData => {\r\n                                            const temp = [];\r\n                                            for (var i = 0; i < prevData.length; i++) {\r\n                                                if (i === index) {\r\n                                                    temp.push({\r\n                                                        ...prevData[index],\r\n                                                        toYear: event.target.value\r\n                                                    })\r\n                                                } else {\r\n                                                    temp.push(prevData[i]);\r\n                                                }\r\n                                            }\r\n                                            return temp;\r\n                                        })\r\n                                    }}\r\n                                    label=\"To Year\"\r\n                                >   \r\n                                    {years.map(year => {\r\n                                        return <MenuItem value={year}>{year}</MenuItem> \r\n                                    })}\r\n                                </Select>\r\n                            </FormControl><br /><br />\r\n                            <TextField \r\n                                id=\"outlined-basic\" \r\n                                label=\"Job title\" \r\n                                variant=\"outlined\"\r\n                                value={experience.jobTitle}\r\n                                onChange={(event) => {\r\n                                    setExperiences(prevData => {\r\n                                        const temp = [];\r\n                                        for (var i = 0; i < prevData.length; i++) {\r\n                                            if (i === index) {\r\n                                                temp.push({\r\n                                                    ...prevData[index],\r\n                                                    jobTitle: event.target.value\r\n                                                })\r\n                                            } else {\r\n                                                temp.push(prevData[i]);\r\n                                            }\r\n                                        }\r\n                                        return temp;\r\n                                    })\r\n                                }} />\r\n                            <TextField \r\n                                id=\"outlined-basic\" \r\n                                label=\"Job description\" \r\n                                variant=\"outlined\"\r\n                                style={{marginLeft: \"1em\"}}\r\n                                value={experience.description}\r\n                                onChange={(event) => {\r\n                                    setExperiences(prevData => {\r\n                                        const temp = [];\r\n                                        for (var i = 0; i < prevData.length; i++) {\r\n                                            if (i === index) {\r\n                                                temp.push({\r\n                                                    ...prevData[index],\r\n                                                    description: event.target.value\r\n                                                })\r\n                                            } else {\r\n                                                temp.push(prevData[i]);\r\n                                            }\r\n                                        }\r\n                                        return temp;\r\n                                    })\r\n                                }} /><br />\r\n                            <TextField\r\n                                placeholder=\"Description\"\r\n                                multiline\r\n                                rows={4}\r\n                                rowsMax={4}\r\n                                variant=\"outlined\"\r\n                                value={experiences.description}\r\n                                onChange={(event) => {\r\n                                    setEducations(prevData => {\r\n                                        const temp = [];\r\n                                        for (var i = 0; i < prevData.length; i++) {\r\n                                            if (i === index) {\r\n                                                temp.push({\r\n                                                    ...prevData[index],\r\n                                                    description: event.target.value\r\n                                                })\r\n                                            } else {\r\n                                                temp.push(prevData[i]);\r\n                                            }\r\n                                        }\r\n                                        return temp;\r\n                                    })\r\n                                }}\r\n                                style={{marginTop: \"1em\", width: \"50%\"}}\r\n                            /><br /><br />\r\n                            <Button \r\n                                variant=\"outlined\" \r\n                                color=\"secondary\"\r\n                                id={\"experience\" + index.toString()}\r\n                                onClick={() => {\r\n                                    setExperiences(prevData => {\r\n                                        document.getElementById(\"experience\" + index.toString()).style.visibility = \"hidden\";\r\n                                        return [...prevData, {\r\n                                            company: \"\",\r\n                                            jobTitle: \"\",\r\n                                            fromYear: 2021,\r\n                                            toYear: 2021,\r\n                                            description: \"\"\r\n                                        }]\r\n                                    })\r\n                                }}>\r\n                                add more experience\r\n                            </Button>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className=\"box\">\r\n                <a name=\"policyAgreement\"></a>\r\n                <div className=\"box_top\">\r\n                    <h2>Policy Agreement</h2>\r\n                </div>\r\n                <div className=\"box_bottom\">\r\n                    <Checkbox\r\n                        checked={checked}\r\n                        onChange={(event) => {\r\n                            setChecked(event.target.checked);\r\n                        }}\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                    />\r\n                    <p>By checking the box, you agree to:</p>\r\n                    <ol style={{marginLeft: \"2em\"}}>\r\n                        <li>All TutorOcean Terms & Conditions.</li>\r\n                        <li>Adhere to all TutorOcean Policies.</li>\r\n                        <li>Not communicate with our students outside the TutorOcean platform.</li>\r\n                        <li>Not accept payment directly from our students outside the TutorOcean platform.</li>\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n            <div className=\"box\">\r\n                <a name=\"submitApplication\"></a>\r\n                <div className=\"box_top\">\r\n                    <h2>Submit Application</h2>\r\n                </div>\r\n                <div className=\"box_bottom\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}